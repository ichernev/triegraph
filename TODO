# store special value in trie2graph to mark matching-end
# add check if todo_idx overflows
# figure out edge iterators

Tasks
=====

+ slow tests for (triedata) multimap
+ put TrieGraphData stats (from main.cpp, cc_dual.cpp) in TrieGraphData class
- use doxygen throughout
- improve building
    - support start from filename, graph, and finish at pairs/td/tgd
    - start from all locations
    - start from location iter
    - support various configuration options for each component
    - support reading config from Config-like object (CmdLine)
- improve SortedVector speed with TrieData builder
- run on bigger (600M+ locations) graphs
- implement save/load for TrieData
- implement 0-overhead pairs->TrieData
    - using file system
        - pairs class
        - writing to disk
        - streaming from disk (iter), configurable buffer
        - sorting on disk, configurable buffer
    - using complex algo (split pairs in 2 vecs):
        - sort pairs by lloc                      [nlogn]
        - allocate lloc_begs, fill from lloc
        - free lloc
        - allocate kmer_idx, sort by kmer         [nlogn]
        - allocate kmer_begs, fill from kmer_idx
        - migrate kmer_idx -> lloc (one by one)   [nlogn]
- implement bit-compact vector
    - figure out interface to make it compatible with all existing code
    - use for pairs, TrieData
- cleanup tests
    - test only component under test
    - move more complicated tests to slow/
    - impl test script
    - add timing to slow tests
    - enable level cutoff in Logger, use in slow/

https://github.com/maickrau/GraphAligner/blob/master/src/GfaGraph.cpp
https://github.com/maickrau/GraphAligner/blob/master/src/GraphAlignerGAFAlignment.h


# with K=16
graph nodes:               959062
graph edges:              1318376
graph letters:           10276724
total kmer-handle pairs: 19947224
unique kmers:            16048814
trie inner:              49726103

BT builder
959062 1318376 10276724
20027694 16048869 49727653
./main  151.74s user 2.20s system 99% cpu 2:34.08 total

current
959062 1318376 10276724
19947224 16048879 49726390
 ./main  148.51s user 2.74s system 99% cpu 2:31.41 total


Testing speed
-------------

fill 20M 64,32 and 32,64 unordered_maps: 14s    32s
fill 20M ---/--- with type Kmer:         14s    28s
fill 20M -----//----- + kmer + arrays:   35s    50s

BT only : 19.4
BT+end-of-graph: 19.6
BT+ht only: 69s
BT+mmap only: 52.8s
BT+ht+set:pop: 157.5s
BT+mmap+set:pop: 138s
BT+ht+set:eager: 204s

Optimum
=======

kmer -> loc:
-- kmer_loc_start[]         NPairs
-- kmer_all_locs[]          LetterLoc
-- kmer_all_locs_begin[]    1bit

loc -> kmer:
-- loc_kmer_start[]         NPairs
-- loc_all_kmers[]          Kmer
-- loc_all_kmers_begin[]    1bit
